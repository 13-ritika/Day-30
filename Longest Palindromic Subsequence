// using lcs
class Solution {
    public int longestPalindromeSubseq(String s) {
        String s2 = "";
        for(int i=s.length()-1;i>=0;i--)
            s2+= s.charAt(i);
        return lcs(s,s2,s.length(),s.length());
    }
     public int lcs(String s1, String s2, int m, int n) {
         int dp[][]= new int[m+1][n+1];
         for(int i=0;i<m+1;i++){
             for(int j=0;j<n+1;j++){
                 if(i==0||j==0) dp[i][j]=0;
             }
         }
         for(int i=1;i<m+1;i++){
             for(int j=1;j<n+1;j++){
                 if(s1.charAt(i-1)==s2.charAt(j-1)) dp[i][j]= 1+ dp[i-1][j-1];
                 else  dp[i][j]= Math.max(dp[i][j-1] ,dp[i-1][j] ) ; 
             }
         }
        return dp[m][n];
    }
}
